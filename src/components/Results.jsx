import {useState} from "react";export default function Results({ inputVal, excludeSpaces }) {	const [chars, words, sentences] = calculateStats(inputVal, excludeSpaces);	const [isSeeMoreOpen, setIsSeeMoreOpen] = useState(false);	const upperInput = Array.from(inputVal.toUpperCase()).filter(currChar => /[A-Z]/.test(currChar));	function handleSeeMore() {		setIsSeeMoreOpen(isSeeMoreOpen => !isSeeMoreOpen);	}	return (		<section className="results">			<section className="results__cards">				<ResultCard number={chars <= 9 ? `0${chars}` : chars} name={`Total Characters${excludeSpaces ? " (no space)" : ""}`} className={"total-characters"}/>				<ResultCard number={words <= 9 ? `0${words}` : words} name="Word Count" className={"word-count"}/>				<ResultCard number={sentences <= 9 ? `0${sentences}` : sentences} name="Sentence Count" className={"sentence-count"}/>			</section>			<section className="results__stats">				<h2 className="text-2">Letter Density</h2>				{ upperInput <= 0 ? <p className="text-4">No characters found. Start typing to see letter density</p> :					<>						<StatsBox input={upperInput} seeMore={isSeeMoreOpen} />						<button onClick={handleSeeMore} className="text-3 result__stats-see-more-btn">							{isSeeMoreOpen ? 'See less ðŸ”º' : 'See more ðŸ”»' }						</button>					</>				}			</section>		</section>	)}function ResultCard({ number, name, className }) {	return (		<div className={`result-card ${className}`}>			<p className="result-card__number text-1">{number}</p>			<p className="result-card__name text-3">{name}</p>		</div>	)}function StatsBox({ input, seeMore }) {	const [totalLetters, lettersMap] = calculateLetterDensity(input);	const StatItems = lettersMap.map(([letter, count]) => {		return <Stat letter={letter} total={count} grandTotal={totalLetters} key={letter}/>	});	return (		<div className="stats-box">			{					seeMore ? StatItems : StatItems.slice(0, 5)			}		</div>	);}function Stat({letter, total, grandTotal}) {	const percentage = (total / grandTotal * 100).toFixed(2);	const style = {		width: `${percentage}%`	}	return (		<div className="letter-stat">			<span className="text-4">{letter}</span>			<div className="letter-stat__percentage-bar">				<div style={style} className="letter-stat__percentage"></div>			</div>			<span className="text-4 letter-stat__number">{total + ` (${percentage}%)`}</span>		</div>	);}function calculateStats(input, excludeSpaces) {	if (!input) {		return [0, 0, 0];	}	const clearedInput = input.trim();	const chars = excludeSpaces ? input.replaceAll(" ", "").length : input.length;	const words = clearedInput.split(" ").length;	const sentences = clearedInput.split(/[.?!]/g).filter(Boolean).length;	return [chars, words, sentences];}function calculateLetterDensity(input) {	if (!input) {		return [0, []];	}	const charsMap = new Map();	for (const currChar of input) {		charsMap.set(currChar, (charsMap.get(currChar) ?? 0) + 1);	}	const sortedMap = [...charsMap.entries()].sort((a, b) => b[1] - a[1]);	return [input.length, sortedMap];}